.de p_argeater_process
.   cdef_start bool argeater_process
.   cdef_arg "ACLONE\ *" clones
.   cdef_arg "AE_MAP\ *" map
.   cdef_end
..
.\"
.de p_argeater_clone_args
.   cdef_start "ACLONE\ *" argeater_clone_args
.   cdef_arg "ACLONE\ *" clones
.   cdef_arg int argc
.   cdef_arg "const\ char\ **" argv
.   cdef_end
..
.de p_argeater_clone_word_list
.   cdef_start "ACLONE\ *" argeater_clone_word_list
.   cdef_arg "ACLONE\ *" clones
.   cdef_arg int clone_count
.   cdef_arg "WORD_LIST\ *" wlist
.   cdef_end
..
.de p_argeater_count_word_list
.  cdef_start "ACLONE\ *" argeater_count_word_list
.  cdef_arg "WORD_LIST\ *" wlist
.  cdef_end
..
.\"
.de p_argeater_show_usage
.   cdef_start void argeater_show_usage
.   cdef_arg "AE_MAP\ *" map
.   cdef_arg "const\ char\ *" cmd_name
.   cdef_end
..
.\"
.de p_argeater_show_options
.   cdef_start void argeater_show_options
.   cdef_arg "AE_MAP\ *" map
.   cdef_arg int indent
.   cdef_end
..
.\"
.de p_argeater_show_arguments
.   cdef_start void argeater_show_arguments
.   cdef_arg "AE_MAP\ *" map
.   cdef_arg int indent
.   cdef_end
..
.\"
.de p_argeater_dump_actions
.   cdef_start void argeater_dump_actions
.   cdef_arg "AE_MAP *" map
.   cdef_end
..
.\"
.de p_AI_ITEM
.   cdef_start "typedef\ struct" action_item {} ;
.   cdef_arg "const\ char\ **" target
.   cdef_arg "const\ char\ *" name
.   cdef_arg char chr
.   cdef_arg AE_TYPE type
.   cdef_arg "const\ char\ *" help_desc
.   cdef_arg "const\ char\ *" help_value
.   cdef_arg action_setter setter
.   cdef_end_stacked AE_ITEM
..
.\"
.de p_AE_TYPE
.   cdef_start "typedef\ enum" action_type {} ,
.   cdef_arg "AET_FLAG\ =" 1
.   cdef_arg "AET_OPTION\ =" 2
.   cdef_arg "AET_REPEAT\ =" 4
.   cdef_end_stacked AE_TYPE
..
.\"
.de p_AE_MAP
.   cdef_start "typedef\ struct" action_map {} ;
.   cdef_arg "AE_ITEM\ *" items
.   cdef_arg int count
.   cdef_end_stacked AE_MAP
..
.\"
.de p_ACLONE
.   cdef_start "typedef struct" arg_clone {} ;
.   cdef_arg "const\ char\ *" value
.   cdef_arg "struct\ arg_clone\ *" next
.   cdef_end_stacked ACLONE
..
.\"
.de p_action_setter
.   cdef_start "typedef\ bool" (*action_setter)
.   cdef_arg "const\ char **" target
.   cdef_arg "const\ char *" value
.   cdef_end
..
.\"
.de p_argeater_string_setter
.   cdef_start bool argeater_string_setter
.   cdef_arg "const\ char **" target
.   cdef_arg "const\ char *" value
.   cdef_end
..
.\"
.de p_argeater_int_setter
.   cdef_start bool argeater_int_setter
.   cdef_arg "const\ char **" target
.   cdef_arg "const\ char *" value
.   cdef_end
..
.\"
.de p_argeater_bool_setter
.   cdef_start bool argeater_bool_setter
.   cdef_arg "const\ char **" target
.   cdef_arg "const\ char *" value
.   cdef_end
..
.\"
